#port=0 means random port assigne at run-time
#server.port=0
#{PORT:0} means port can be assigned from command-line-argument or by automatically assigned by JVM.
server.port=${PORT:0}

#project-name and application-name may be same or different but good to have sort application name As it is used to call in url
spring.application.name=users-ws

#debug level info
#logging.level.org.springframework=info

#Eureka Client Service url
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#registering more instances using instance-id look like this 
#spring.application.instance_id can be assigned from command-line-argument or by automatically assigned by JVM.
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#DevTools restart enable
spring.devtools.restart.enabled=true

#enbling H2 console
spring.h2.console.enabled=true
#enable zuul to access H2 Go and configure in websecurity that spring sec allow h2 console
#accessing H2-Console via zuul
spring.h2.console.settings.web-allow-others=true

#i am getting error testdb does not exist after adding following properties error gone.
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#ip address is related with the internet so no internet no microservice
gateway.ip=192.168.1.4

#because of double qoutes i have lost my 2 hour 
#login.url.path="users/login"

#customizing login url path of users-ws in spring security
login.url.path=/users/login


#10 days For 6 Zero
token.expiration_time=846000000
authorization.token.header.prefix=Bearer
token.secret = my_jwt_secret_token

#albums-ws microservice url
albums.url=http://albums-ws/users/%s/albums
#logging of albums-ws interface
logging.level.com.springBoot.microservices.feign.AlbumServiceClient=debug

#logging.level.com.springBoot.microservices.controller.UsersController=debug

#enable hystrix
#feign.hystrix.enabled=true

#Spring boot Actuator url expose
management.endpoints.web.exposure.include=beans,health,mappings,httptrace,routes


#RabbitMQ configuration
#Configuration for spring cloud bus as it uses
#RabbitMQ to update configuration to all microservices instances
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=admin



############################## Tutorials.properties ############################################

#Eureka client service url
#here first eureka is refer to username and second eureka is refer to the password
#eureka.client.service-url.defaultZone=http://eureka:eureka@localhost:8010/eureka


#enbling H2 console
#spring.h2.console.enabled=true
#enable zuul to access H2 Go and configure in websecurity that spring sec allow h2 console
#accessing H2-Console via zuul
#spring.h2.console.settings.web-allow-others=true

#i am getting error testdb does not exist after adding following properties error gone.
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect


#configuring zull ip address for security 
#Please check every time in eureka dashboard as it is frequently changes
#i have lost more than 2 hours
#ip address is related with the internet so no internet no microservice
#gateway.ip=192.168.0.102


#because of double qoutes i have lost my 2 hour 
#login.url.path="users/login"

#customizing login url path of users-ws in spring security
#login.url.path=/users/login


#10 days For 6 Zero
#token.expiration_time=846000000
#authorization.token.header.prefix=Bearer
#token.secret = my_jwt_secret_token

#albums-ws microservice url
#albums.url=http://albums-ws/users/%s/albums
#logging of albums-ws interface
#logging.level.com.springBoot.microservices.feign.AlbumServiceClient=debug

#logging.level.com.springBoot.microservices.controller.UsersController=debug

#RabbitMQ configuration
#Configuration for spring cloud bus as it uses RabbitMQ to update configuration to all microservices instances
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest


#enable hystrix
#feign.hystrix.enabled=true

#Spring boot Actuator url expose
#management.endpoints.web.exposure.include=beans,health,mappings,httptrace,routes


#zipkin configuration
#spring.zipkin.base-url=http://localhost:9411
#spring.zipkin.sender.type=web
#spring.sleuth.sampler.probability=1

#temporary comment very usefull in file loging and ELK stack
#logging.file.name=users-ws.log


